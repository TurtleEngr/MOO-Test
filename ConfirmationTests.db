** LambdaMOO Database, Format Version 4 **
7
11
0
1
3
#0
System Object

16
3
-1
-1
-1
1
-1
2
1
do_login_command
3
173
-1
3
testHarness
assert
tnt
3
1
4
3
1
1
5
3
1
4
3
2
this
2
none
2
this
3
1
#1
Root Class

16
3
-1
-1
-1
-1
0
-1
0
0
0
#2
The First Room

0
3
-1
3
-1
1
-1
3
1
eval
3
88
-2
0
0
#3
Wizard

7
3
2
-1
-1
1
-1
4
0
0
0
#4
Generic Test Harness

0
3
-1
-1
-1
1
6
5
2
setUp
3
165
-1
tearDown
3
165
-1
0
0
#5


0
3
-1
-1
-1
1
-1
-1
8
areEqual
3
173
-1
isList
3
173
-1
isString
3
173
-1
isInt
3
173
-1
isFloat
3
173
-1
isObj
3
173
-1
isErr
3
173
-1
isTypeOf
3
173
-1
1
message
1
2

3
1
#6
Primitive Tests

0
3
-1
-1
-1
4
-1
-1
1
testTypeValues
3
173
-1
0
0
#0:0
return #3;
.
#2:0
answer = eval(("return " + argstr) + ";");
if (answer[1])
notify(player, tostr("=> ", toliteral(answer[2])));
else
for line in (answer[2])
notify(player, line);
endfor
endif
.
#5:0
if (length(args) < 2)
return raise(E_ARGS);
endif
msg = "";
{a, b, ?msg} = args;
if (a == b)
return;
else
raise(E_NONE, msg);
endif
.
#5:1
if (length(args) == 0)
raise(E_ARGS);
endif
msg = "";
{value, ?msg} = args;
this:isTypeOf(value, LIST, msg);
.
#5:2
if (length(args) == 0)
raise(E_ARGS);
endif
msg = "";
{value, ?msg} = args;
this:isTypeOf(value, STR, msg);
.
#5:3
if (length(args) == 0)
raise(E_ARGS);
endif
msg = "";
{value, ?msg} = args;
this:isTypeOf(value, INT, msg);
.
#5:4
if (length(args) == 0)
raise(E_ARGS);
endif
msg = "";
{value, ?msg} = args;
this:isTypeOf(value, FLOAT, msg);
.
#5:5
if (length(args) == 0)
raise(E_ARGS);
endif
msg = "";
{value, ?msg} = args;
this:isTypeOf(value, OBJ, msg);
.
#5:6
if (length(args) == 0)
raise(E_ARGS);
endif
msg = "";
{value, ?msg} = args;
this:isTypeOf(value, ERR, msg);
.
#5:7
if (length(args) < 2)
raise(E_ARGS);
endif
msg = "";
{value, type, ?msg} = args;
if (typeof(value) == type)
return;
else
raise(E_NONE, msg);
endif
.
#6:0
$assert:areEqual(typeof(""), STR);
$assert:areEqual(typeof({}), LIST);
$assert:areEqual(typeof(1), INT);
$assert:areEqual(typeof(1.0), FLOAT);
$assert:areEqual(typeof(#0), OBJ);
$assert:areEqual(typeof(E_NONE), ERR);
.
0 clocks
0 queued tasks
0 suspended tasks
1 active connections with listeners
3 0
